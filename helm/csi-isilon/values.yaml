# "isiIP" defines the HTTPs endpoint of the PowerScale OneFS API server
isiIP: 1.1.1.1

# "isiPort" defines the HTTPs port number of the PowerScale OneFS API server
isiPort: "8080"

# "isiInsecure" specifies whether the PowerScale OneFS API server's certificate chain and host name should be verified.
isiInsecure: "true"

# The name of the access zone a volume can be created in
isiAccessZone: "System"

# "volumeNamePrefix" defines a string prepended to each volume created by the CSI driver.
volumeNamePrefix: k8s

# "controllerCount" defines the number of csi-powerscale controller pods to deploy to
# the Kubernetes release.
controllerCount: 2

# Indicates whether debug level logs should be logged
enableDebug: "true"

# Indicates what content of the OneFS REST API message should be logged in debug level logs
# Values:
#   0 - log full content of the HTTP request and response
#   1 - log without the HTTP response body
#   2 - log only 1st line of the HTTP request and response
verbose: 1

# Indicates whether the provisioner should attempt to set (later unset) quota on a newly provisioned volume
# This requires SmartQuotas to be enabled.
enableQuota: "true"

# Indicates whether the controller/node should probe during initialization
noProbeOnStart: "false"

# The default base path for the volumes to be created, this will be used if a storage class does not have the IsiPath parameter specified
# Ensure that this path exists on PowerScale.
isiPath: "/ifs/data/csi"

# Enable auto probe.
autoProbe: "true"

# Specify whether to set the version to v3 when mounting an NFS export. If the value is "false", then the default version supported will be used (i.e. the mount command will not explicitly specify "-o vers=3" option)
# This flag has now been deprecated and will be removed in a future release.
# Please use StorageClass.mountOptions if you want to specify 'vers=3' as a mount option.
nfsV3: "false"

# Specify if custom topology label <provisionerName>.dellemc.com/<powerscalefqdnorip>:<provisionerName> has to be used for making connection to backend PowerScale Array
# If enableCustomTopology is set to true, then do not specify allowedTopologies in storage class
enableCustomTopology: "false"

# The installation process will generate multiple storageclasses based on these parameters.
# Only the primary storageclass for the driver will be marked default if specified.
storageClass:
  # "storageClass.name" defines the name of the storage class to be defined.
  name: isilon

  # "storageClass.isDefault" defines whether the primary storage class should be the # default.
  isDefault: "true"

  # "storageClass.reclaimPolicy" defines what will happen when a volume is
  # removed from the Kubernetes API. Valid values are "Retain" and "Delete".
  reclaimPolicy: Delete
  accessZone: System
  # The default base path for the volumes to be created, this will be used if a storage class does not have the IsiPath parameter specified
  # Ensure that this path exists on Isilon.
  isiPath: "/ifs/data/csi"
  #Access Zone service IP if different from isiIP, specify here and refer in storageClass
  #AzServiceIP : 192.168.2.1

  # When a PVC is being created, it takes the storage class' value of "storageclass.rootClientEnabled", 
  # which  determines, when a node mounts the PVC, in NodeStageVolume, whether to add the k8s node to 
  # the "Root clients" field (when true) or "Clients" field (when false) of the NFS export 
  rootClientEnabled: "false"

controller:

  # Define nodeSelector for the controllers, if required
  nodeSelector:
  #  node-role.kubernetes.io/master: ""

  # Define tolerations for the controllers, if required
  tolerations:
  #  - key: "node-role.kubernetes.io/master"
  #    operator: "Equal"
  #    value: "true"
  #    effect: "NoSchedule"
node:
  
  # Define tolerations for the node daemonset, if required
  tolerations:
  #  - key: "node-role.kubernetes.io/master"
  #    operator: "Equal"
  #    value: "true"
  #    effect: "NoSchedule"
